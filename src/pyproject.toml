# Ruff Configuration: This section configures the Ruff linter
[tool.ruff]
line-length = 88         # Sets the maximum allowed line length (e.g., for PEP 8 compliance).
select = ["E", "F", "I"] # Specifies the linting rules to enable:
                         # - "E": pycodestyle errors (e.g., whitespace issues).
                         # - "F": pyflakes errors (e.g., undefined variables).
                         # - "I": import-related rules (e.g., sorting, unused imports).

ignore = ["W503"]        # Disables specific linting rules:
                         # - "W503": Ignore line break before a binary operator (PEP 8 allows both styles).

fixable = ["F", "I"]     # Specifies which issues Ruff can automatically fix:
                         # - "F": pyflakes fixes (e.g., unused variables).
                         # - "I": import fixes (e.g., sorting, removing unused imports).

exclude = ["build/",     # Directories to exclude from linting:
           "dist/",      # - "build/": Temporary build files.
           ".venv/"]     # - ".venv/": Virtual environment directory.

# Mypy Configuration: This section configures the Mypy type checker
[tool.mypy]
python_version = "3.12"      # Specifies the Python version used in the project for type checking.
strict = true                # Enables "strict mode," which applies several stricter type-checking rules:
                             # - Disallows untyped function definitions and calls.
                             # - Enforces type annotations more rigorously.

ignore_missing_imports = true # Suppresses errors for missing type stubs in third-party libraries.
                              # (e.g., when libraries like `pygame` lack official type annotations).

disallow_untyped_calls = true # Prohibits calls to functions without type annotations.

disallow_untyped_defs = true  # Prohibits defining functions without type annotations.

check_untyped_defs = true     # Checks the bodies of functions that lack type annotations for type errors.
