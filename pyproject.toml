[build-system]
requires = ["setuptools>=42.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "PySeas"
version = "1.0.0"
description = """PySeas is an open-source project to create an engaging board game in Python,
inspired by Sea of Thieves. Ideal for game development enthusiasts and Python programmers."""
readme = "README.md"
requires-python = ">=3.12"
license = {file = "LICENSE"}
authors = [
    {name = "Danilo Saiu"},
    {name = "Davit Alsemgeest"},
]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Intended Audience :: Developers",
    "Intended Audience :: Graphic Designers",
    "Intended Audience :: Music Composers",
    "Intended Audience :: Board Game Enthusiasts",
    "Topic :: Games/Entertainment :: Board Games",
]

[tool.pytest.ini_options]
addopts = "--cov=src/launcher --cov=src/py_version --cov=src/pygame_version --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "C90"]
ignore = ["E501", "E203"]
# Allow imports relative to the "src" and "test" directories.
src = ["src", "test"]


[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]
ignore = [
  "E501", # line too long, handled by ruff format
  "B008", # do not perform function calls in argument defaults
  "B028", # No explicit `stacklevel` keyword argument found
  "C901", # too complex
]
unfixable = ["B"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20


# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 4.16.0
envlist = py312, format, lint, tests

[testenv]
skip_install = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
deps = 
       -r{toxinidir}/requirements_test.txt
       -r{toxinidir}/requirements.txt
       -r{toxindir}/requirements_dev.txt

[testenv:format]
deps = ruff
commands = ruff format --check

[testenv:lint]
deps = ruff
commands = 
    ruff check --fix


[testenv:ruff]
description = Run Ruff for linting and formatting
deps = ruff
commands =
    ruff format --check
    ruff check .
"""
